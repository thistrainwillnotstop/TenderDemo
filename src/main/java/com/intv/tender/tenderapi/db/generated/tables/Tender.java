/*
 * This file is generated by jOOQ.
 */
package com.intv.tender.tenderapi.db.generated.tables;


import com.intv.tender.tenderapi.db.generated.Keys;
import com.intv.tender.tenderapi.db.generated.Public;
import com.intv.tender.tenderapi.db.generated.tables.records.TenderRecord;
import org.jooq.Record;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tender extends TableImpl<TenderRecord> {

    private static final long serialVersionUID = 1865906211;

    /**
     * The reference instance of <code>PUBLIC.TENDER</code>
     */
    public static final Tender TENDER = new Tender();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TenderRecord> getRecordType() {
        return TenderRecord.class;
    }

    /**
     * The column <code>PUBLIC.TENDER.ID</code>.
     */
    public final TableField<TenderRecord, Integer> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.TENDER.DESCRIPTION</code>.
     */
    public final TableField<TenderRecord, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>PUBLIC.TENDER.CREATED_AT</code>.
     */
    public final TableField<TenderRecord, LocalDateTime> CREATED_AT = createField(DSL.name("CREATED_AT"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(DSL.field("LOCALTIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>PUBLIC.TENDER.STATUS</code>.
     */
    public final TableField<TenderRecord, String> STATUS = createField(DSL.name("STATUS"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.TENDER.ISSUER_ID</code>.
     */
    public final TableField<TenderRecord, Integer> ISSUER_ID = createField(DSL.name("ISSUER_ID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.TENDER</code> table reference
     */
    public Tender() {
        this(DSL.name("TENDER"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.TENDER</code> table reference
     */
    public Tender(String alias) {
        this(DSL.name(alias), TENDER);
    }

    /**
     * Create an aliased <code>PUBLIC.TENDER</code> table reference
     */
    public Tender(Name alias) {
        this(alias, TENDER);
    }

    private Tender(Name alias, Table<TenderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tender(Name alias, Table<TenderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Tender(Table<O> child, ForeignKey<O, TenderRecord> key) {
        super(child, key, TENDER);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<TenderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TENDER;
    }

    @Override
    public UniqueKey<TenderRecord> getPrimaryKey() {
        return Keys.PK_TENDER;
    }

    @Override
    public List<UniqueKey<TenderRecord>> getKeys() {
        return Arrays.<UniqueKey<TenderRecord>>asList(Keys.PK_TENDER);
    }

    @Override
    public List<ForeignKey<TenderRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TenderRecord, ?>>asList(Keys.FK_ISSUER_ID);
    }

    public Issuer issuer() {
        return new Issuer(this, Keys.FK_ISSUER_ID);
    }

    @Override
    public Tender as(String alias) {
        return new Tender(DSL.name(alias), this);
    }

    @Override
    public Tender as(Name alias) {
        return new Tender(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tender rename(String name) {
        return new Tender(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tender rename(Name name) {
        return new Tender(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, LocalDateTime, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
