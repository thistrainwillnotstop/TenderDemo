/*
 * This file is generated by jOOQ.
 */
package com.intv.tender.tenderapi.db.generated;


import com.intv.tender.tenderapi.db.generated.tables.*;
import com.intv.tender.tenderapi.db.generated.tables.records.*;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TenderRecord, Integer> IDENTITY_TENDER = Identities0.IDENTITY_TENDER;
    public static final Identity<TenderOffersRecord, Integer> IDENTITY_TENDER_OFFERS = Identities0.IDENTITY_TENDER_OFFERS;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BidderRecord> PK_BIDDER = UniqueKeys0.PK_BIDDER;
    public static final UniqueKey<IssuerRecord> PK_ISSUER = UniqueKeys0.PK_ISSUER;
    public static final UniqueKey<TenderRecord> PK_TENDER = UniqueKeys0.PK_TENDER;
    public static final UniqueKey<TenderOffersRecord> PK_TENDER_OFFERS = UniqueKeys0.PK_TENDER_OFFERS;
    public static final UniqueKey<UserRecord> PK_USER = UniqueKeys0.PK_USER;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BidderRecord, UserRecord> FK_BIDDER = ForeignKeys0.FK_BIDDER;
    public static final ForeignKey<IssuerRecord, UserRecord> FK_ISSUER = ForeignKeys0.FK_ISSUER;
    public static final ForeignKey<TenderRecord, IssuerRecord> FK_ISSUER_ID = ForeignKeys0.FK_ISSUER_ID;
    public static final ForeignKey<TenderOffersRecord, TenderRecord> FK_TENDER_ID = ForeignKeys0.FK_TENDER_ID;
    public static final ForeignKey<TenderOffersRecord, BidderRecord> FK_BIDDER_ID = ForeignKeys0.FK_BIDDER_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TenderRecord, Integer> IDENTITY_TENDER = Internal.createIdentity(Tender.TENDER, Tender.TENDER.ID);
        public static Identity<TenderOffersRecord, Integer> IDENTITY_TENDER_OFFERS = Internal.createIdentity(TenderOffers.TENDER_OFFERS, TenderOffers.TENDER_OFFERS.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BidderRecord> PK_BIDDER = Internal.createUniqueKey(Bidder.BIDDER, "PK_BIDDER", new TableField[] { Bidder.BIDDER.USER_ID }, true);
        public static final UniqueKey<IssuerRecord> PK_ISSUER = Internal.createUniqueKey(Issuer.ISSUER, "PK_ISSUER", new TableField[] { Issuer.ISSUER.USER_ID }, true);
        public static final UniqueKey<TenderRecord> PK_TENDER = Internal.createUniqueKey(Tender.TENDER, "PK_TENDER", new TableField[] { Tender.TENDER.ID }, true);
        public static final UniqueKey<TenderOffersRecord> PK_TENDER_OFFERS = Internal.createUniqueKey(TenderOffers.TENDER_OFFERS, "PK_TENDER_OFFERS", new TableField[] { TenderOffers.TENDER_OFFERS.ID }, true);
        public static final UniqueKey<UserRecord> PK_USER = Internal.createUniqueKey(User.USER, "PK_USER", new TableField[] { User.USER.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<BidderRecord, UserRecord> FK_BIDDER = Internal.createForeignKey(Keys.PK_USER, Bidder.BIDDER, "FK_BIDDER", new TableField[] { Bidder.BIDDER.USER_ID }, true);
        public static final ForeignKey<IssuerRecord, UserRecord> FK_ISSUER = Internal.createForeignKey(Keys.PK_USER, Issuer.ISSUER, "FK_ISSUER", new TableField[] { Issuer.ISSUER.USER_ID }, true);
        public static final ForeignKey<TenderRecord, IssuerRecord> FK_ISSUER_ID = Internal.createForeignKey(Keys.PK_ISSUER, Tender.TENDER, "FK_ISSUER_ID", new TableField[] { Tender.TENDER.ISSUER_ID }, true);
        public static final ForeignKey<TenderOffersRecord, TenderRecord> FK_TENDER_ID = Internal.createForeignKey(Keys.PK_TENDER, TenderOffers.TENDER_OFFERS, "FK_TENDER_ID", new TableField[] { TenderOffers.TENDER_OFFERS.TENDER_ID }, true);
        public static final ForeignKey<TenderOffersRecord, BidderRecord> FK_BIDDER_ID = Internal.createForeignKey(Keys.PK_BIDDER, TenderOffers.TENDER_OFFERS, "FK_BIDDER_ID", new TableField[] { TenderOffers.TENDER_OFFERS.BIDDER_ID }, true);
    }
}
